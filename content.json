{"meta":{"title":"钱老肥","subtitle":null,"description":null,"author":"钱老肥","url":"https://www.qianlaofei.cn"},"pages":[{"title":"关于我","date":"2022-09-13T14:44:47.920Z","updated":"2022-09-13T14:44:47.920Z","comments":true,"path":"about/index.html","permalink":"https://www.qianlaofei.cn/about/index.html","excerpt":"","text":"简介关注Openstack, Python, Docker, DevOps, Kubernetes, Native Cloud等相关技术。 不要做别人眼中的全能选手, 多学一点自己想学的东西。本博客记录自己所学习, 以及记录生活中的一些事。内容可能有错, 也许并不完美, 然后这就是成长的过程。 联系我: &#99;&#104;&#x61;&#109;&#x7a;&#104;&#101;&#110;&#x67;&#64;&#x66;&#111;&#120;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;"},{"title":"Categories","date":"2022-09-13T14:44:47.920Z","updated":"2022-09-13T14:44:47.920Z","comments":true,"path":"categories/index.html","permalink":"https://www.qianlaofei.cn/categories/index.html","excerpt":"","text":""},{"title":"留言","date":"2022-09-13T14:44:47.920Z","updated":"2022-09-13T14:44:47.920Z","comments":true,"path":"message/index.html","permalink":"https://www.qianlaofei.cn/message/index.html","excerpt":"","text":"本站使用Disqus留言系统，由于某些原因可能无法访问，VPS代理的话稍后再研究研究，现在要留言的话请使用科学上网，吼不吼啊。 欢迎大家留言，我们一同学习、成长；"},{"title":"标签","date":"2018-01-24T14:24:51.000Z","updated":"2022-09-13T14:44:47.920Z","comments":false,"path":"tags/index.html","permalink":"https://www.qianlaofei.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"WSGI介绍","slug":"WSGI-Introduction","date":"2018-02-22T14:04:59.000Z","updated":"2022-09-13T14:44:47.920Z","comments":true,"path":"2018/02/22/WSGI-Introduction/","link":"","permalink":"https://www.qianlaofei.cn/2018/02/22/WSGI-Introduction/","excerpt":"最近在看cinder的代码,但是一上来被代码结构搞的很糊涂,不知道如何看起,我们都知道openstack的组件对外提供的是RESTful API,也就是HTTP请求,在Python里WSGI可以算得上是很重要的一个概念了，所以就先了解下WSGI。","text":"最近在看cinder的代码,但是一上来被代码结构搞的很糊涂,不知道如何看起,我们都知道openstack的组件对外提供的是RESTful API,也就是HTTP请求,在Python里WSGI可以算得上是很重要的一个概念了，所以就先了解下WSGI。 WSGI的全称为Web Server Gateway Interface,一个看上去很笼统的名字,但是如果了解过Java的话，就可以拿Java里面的Servlet来类比Python中的WSGI，Servlet和WSGI一样都是只是一种标准，具体的实现在各个Web容器之中，就像Servlet中要实现doGet(request,response)或者doPost(request,response)一样,WSGI中也要实现一个函数，这个函数的名字是可以自定义的，但是入参是定好的，为environ, start_response。 environ为一个包含所有HTTP请求信息的dict对象。 start_response为一个发送HTTP响应的函数。 一般一个HTTP的请求类型或者一种资源的请求会被一个函数结束，术语称为应用或者application。 一个应用是由多个application组成的，如何通过不同的URL访问不同的application，这需要后面介绍的paste,Routes。 今天就先把一个简单的WSGI运行起来吧。 我们先编写hello.py，实现Web应用程序的WSGI处理函数： 123456# -*- coding: utf-8 -*-# hello.pydef application(environ, start_response): start_response(&#x27;200 OK&#x27;, [(&#x27;Content-Type&#x27;, &#x27;text/html&#x27;)]) return [b&#x27;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#x27;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数： 123456789101112# -*- coding: utf-8 -*-# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&#x27;&#x27;, 8000, application)print(&#x27;Serving HTTP on port 8000...&#x27;)# 开始监听HTTP请求:httpd.serve_forever() 确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：并访问 一个简单的WSGI demo就能简单地完成了，但是系统性地使用还用WSGI还是得用框架才能更好的发挥他的作用。","categories":[],"tags":[{"name":"Openstack,WGSI","slug":"Openstack-WGSI","permalink":"https://www.qianlaofei.cn/tags/Openstack-WGSI/"}]},{"title":"GNS3的安装","slug":"GNS3-installation","date":"2018-02-07T11:33:46.000Z","updated":"2022-09-13T14:44:47.920Z","comments":true,"path":"2018/02/07/GNS3-installation/","link":"","permalink":"https://www.qianlaofei.cn/2018/02/07/GNS3-installation/","excerpt":"GNS3是一款网络模拟器工具,因为涉及GUI和VM的安装和对接,对于第一次接触的人可能无从下手,所以写了此教程。","text":"GNS3是一款网络模拟器工具,因为涉及GUI和VM的安装和对接,对于第一次接触的人可能无从下手,所以写了此教程。 GNS3的介绍类似的软件还有Cisco Packet Tracer,不过思科的软件只是软模拟,而GNS3这款软件能够允许思科的IOS系统,和抓包软件Wireshark完美结合,能够看到真实的网络包,所以学习网络和网络安全,这都是一等一的良品。 GNS3的组成GNS3的部件包括GUI和VM,其实只需要GNS3 GUI就能够运行了,但是这样的话就需要去思科官网下载对应的IOS系统镜像,而安装了GNS3 VM,将GUI和VM对接起来,就可以避免这个问题。 GNS3 GUI的安装","categories":[],"tags":[{"name":"GNS3","slug":"GNS3","permalink":"https://www.qianlaofei.cn/tags/GNS3/"},{"name":"Network","slug":"Network","permalink":"https://www.qianlaofei.cn/tags/Network/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-02-06T11:33:46.000Z","updated":"2022-09-13T14:44:47.920Z","comments":true,"path":"2018/02/06/hello-world/","link":"","permalink":"https://www.qianlaofei.cn/2018/02/06/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}